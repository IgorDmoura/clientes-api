Metadata-Version: 2.1
Name: validate-docbr
Version: 1.9.0
Summary: Validate brazilian documents.
Home-page: https://github.com/alvarofpp/validate-docbr
Author: Álvaro Ferreira Pires de Paiva
Author-email: alvarofepipa@gmail.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown

# validate-docbr
<a href="https://pypi.org/project/validate-docbr/">
  <img src="https://img.shields.io/pypi/v/validate-docbr.svg" alt="latest release" />
</a>

Pacote Python para validaÃ§Ã£o de documentos brasileiros.

Para instalar o pacote:
```bash
pip install validate-docbr
```

A documentaÃ§Ã£o pode ser acessada [clicando aqui](https://alvarofpp.github.io/validate-docbr).

## Documentos
Documentos que estÃ£o no pacote:

- [CPF](https://github.com/alvarofpp/validate-docbr/wiki/CPF): Cadastro de Pessoas FÃ­sicas;
- [CNH](#): Carteira Nacional de HabilitaÃ§Ã£o;
- [CNPJ](https://github.com/alvarofpp/validate-docbr/wiki/CNPJ): Cadastro Nacional da Pessoa JurÃ­dica;
- [CNS](https://github.com/alvarofpp/validate-docbr/wiki/CNS): CartÃ£o Nacional de SaÃºde;
- [PIS](#): PIS/NIS/PASEP/NIT;
- [TÃ­tulo eleitoral](#): Cadastro que permite cidadÃ£os brasileiros votar.

Para entender melhor os documentos e suas respectivas classes, basta acessar a [Wiki do projeto](https://github.com/alvarofpp/validate-docbr/wiki).

## MÃ©todos
Todos os documentos possuem os mesmos mÃ©todos e funcionam da mesma forma.

### validate
Valida o documento passado como argumento. Retorna um `bool`, `True` caso seja vÃ¡lido, `False` caso contrÃ¡rio . Recebe os parÃ¢metros:

| ParÃ¢metro | Tipo | Valor padrÃ£o | ObrigatÃ³rio | DescriÃ§Ã£o |
| --------- | ---- | ----------- | ------------ | --------- |
| `doc` | `str`| `''` | X | O documento que se quer validar. |

```python
from validate_docbr import CPF

cpf = CPF()

# Validar CPF
cpf.validate("012.345.678-90")  # True
cpf.validate("012.345.678-91")  # False
```

[Caso especial de CPF](https://alvarofpp.github.io/validate-docbr/guia-de-uso/#caso-especial-de-cpf).

### validate_list

Valida uma lista de documentos passado como argumento. Retorna uma lista de `bool`, `True` caso seja vÃ¡lido, `False` caso contrÃ¡rio. Recebe os parÃ¢metros:

| ParÃ¢metro | Tipo | Valor padrÃ£o | ObrigatÃ³rio | DescriÃ§Ã£o |
| --------- | ---- | ----------- | ------------ | --------- |
| `docs` | `List[str]`| `[]` | X | A lista de documentos para validar. |

```python
from validate_docbr import CPF

cpf = CPF()

# Validar CPFs
cpf.validate_list(["012.345.678-90", "012.345.678-91"])  # [True, False]
```

### validate_docs
**ObservaÃ§Ã£o**: diferente dos outros mÃ©todos, esse mÃ©todo Ã© do escopo global do pacote, nÃ£o precisa-se instanciar uma classe para uso.

Valida vÃ¡rios documentos difererentes. Retorna uma lista com valores `bool` para cada tupla da lista (na mesma ordem), `True` caso seja vÃ¡lido, `False` caso contrÃ¡rio . Recebe os parÃ¢metros:

| ParÃ¢metro | Tipo | Valor padrÃ£o | ObrigatÃ³rio | DescriÃ§Ã£o |
| --------- | ---- | ----------- | ------------ | --------- |
| `documents` | `List[Tuple[BaseDoc, str]]`| `[]` | X | Lista de tuplas, cada tupla possui como primeiro elemento o tipo de documento e o segundo elemento o valor que se deseja validar. |

```python
import validate_docbr as docbr


# Validar diferentes documentos
docs = [(docbr.CPF, '90396100457'), (docbr.CNPJ, '49910753848365')]
docbr.validate_docs(docs)  # [True, False]
```

### generate
Gera um novo documento, retorna em formato de `str`. Recebe os parÃ¢metros:

| ParÃ¢metro | Tipo | Valor padrÃ£o | ObrigatÃ³rio | DescriÃ§Ã£o |
| --------- | ---- | ----------- | ------------ | --------- |
| `mask` | `bool` | `False` | - | Quando possui o valor `True`, o documento retornado estarÃ¡ formatado. |

```python
from validate_docbr import CPF

cpf = CPF()

# Gerar novo CPF
new_cpf_one = cpf.generate()  # "01234567890"
new_cpf_two = cpf.generate(True)  # "012.345.678-90"
```

### generate_list
Gera uma lista de documentos, retorna em formato de `list` com elementos do tipo `str`. Recebe os parÃ¢metros:

| ParÃ¢metro | Tipo | Valor padrÃ£o | ObrigatÃ³rio | DescriÃ§Ã£o |
| --------- | ---- | ----------- | ------------ | --------- |
| `n` | `int` | `1` | X | A quantidade desejada de documentos que serÃ£o gerados. |
| `mask` | `bool` | `False` | - | Se os documentos gerados deverÃ£o ter ou nÃ£o mÃ¡scara. |
| `repeat` | `bool` | `False` | - | Se aceita ou nÃ£o documentos repetidos. |
    
```python
from validate_docbr import CPF

cpf = CPF()

# Gerar lista de CPFs
cpfs_one = cpf.generate_list(2)  # [ "85215667438", "28293145811" ]
cpfs_two = cpf.generate_list(2, True)  # [ "852.156.674-38", "282.931.458-11" ]
```

### mask
Mascara o documento passado como argumento. Retorna um `str` que Ã© o documento mascarado . Recebe os parÃ¢metros:

| ParÃ¢metro | Tipo | Valor padrÃ£o | ObrigatÃ³rio | DescriÃ§Ã£o |
| --------- | ---- | ----------- | ------------ | --------- |
| `doc` | `str`| `''` | X | O documento que se quer mascarar. |

```python
from validate_docbr import CPF

cpf = CPF()

cpf_me = "01234567890"

# Mascara o CPF
cpf.mask(cpf_me)  # "012.345.678-90"
```


